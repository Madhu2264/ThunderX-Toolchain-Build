
%ifndef %{build_ncpus}
%   define  build_ncpus 80
%endif

line_width           = 1020
log_line_width       = 1020
makeflags            = --jobs=%{build_ncpus}
output_format        = txt,html,cfg,pdf,csv
mean_anyway          = 1
strict_rundir_verify = 0

default:
%ifndef  %{perf}
# Note: Do not put taskset into run.sh and then execute run.sh, it causes
#       problems (verification errors).
#    submit       = taskset -c $SPECCOPYNUM $command
#    submit	 = numactl --localalloc --physcpubind=$SPECCOPYNUM -- $command
#    submit0      = echo "$command" >> run.sh
#    submit1      = bash run.sh
%else
    submit0      = echo "perf record -e cycles $command" >> run.sh
    submit1      = echo "mv perf.data perf.data.\$\$" >> run.sh
    submit2      = bash run.sh
%endif

default:
    CC                      = gcc      -std=c11
    CXX                     = g++      -std=c++03
    CC_VERSION_OPTION       = -v
    CXX_VERSION_OPTION      = -v
    FC_VERSION_OPTION       = -v


default=base:
# Temporarily removing -flto=32 to see if it helps cam4 build on T88.
    OPTIMIZE = -mcpu=native -Ofast -flto

default:
    EXTRA_PORTABILITY = -DSPEC_LP64

# perlbench may need -fno-strict-overflow on ICC (GCC?) but haven't hit it yet
# x264 may need -fno-alias on ICC (GCC?) but haven't hit it yet.

500.perlbench_r,600.perlbench_s:
    PORTABILITY = -DSPEC_LINUX_AARCH64

510.parest_r:
   CXXPORTABILITY = -fpermissive

521.wrf_r,621.wrf_s:
    CPORTABILITY = -DSPEC_CASE_FLAG
    FPORTABILITY = -fconvert=big-endian

523.xalancbmk_r,623.xalancbmk_s:
    PORTABILITY = -DSPEC_LINUX

526.blender_r:
    CPORTABILITY  = -std=gnu11
    PORTABILITY = -DSPEC_LINUX -funsigned-char

527.cam4_r,627.cam4_s:
    PORTABILITY = -DSPEC_CASE_FLAG

628.pop2_s:
    PORTABILITY = -DSPEC_CASE_FLAG -fconvert=big-endian

intspeed,fpspeed:
    EXTRA_OPTIMIZE = -fopenmp -DSPEC_OPENMP

intrate,intspeed=base: # flags for integer base
    EXTRA_COPTIMIZE = -fno-strict-aliasing -fgnu89-inline
